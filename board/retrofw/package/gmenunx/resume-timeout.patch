diff --git a/src/gmenu2x.cpp b/src/gmenu2x.cpp
index 994af2e..ebe82da 100644
--- a/src/gmenu2x.cpp
+++ b/src/gmenu2x.cpp
@@ -439,7 +439,7 @@
 		sd.addSetting(new MenuSettingMultiString(this, tr["TV mode"], tr["Define default TV mode"], &confStr["tvMode"], tvMode));
 	}
 
-	sd.addSetting(new MenuSettingInt(this, tr["Suspend timeout"], tr["Seconds until suspend the device when inactive"], &confInt["backlightTimeout"], 30, 10, 300));
+	sd.addSetting((MenuSettingInt *)(new MenuSettingInt(this, tr["Suspend timeout"], tr["Seconds until suspend the device when inactive"], &confInt["backlightTimeout"], 30, 0, 300))->setOff(9));
 	sd.addSetting(new MenuSettingInt(this, tr["Power timeout"], tr["Minutes to poweroff system if inactive"], &confInt["powerTimeout"], 10, 1, 300));
 	sd.addSetting(new MenuSettingInt(this, tr["Backlight"], tr["Set LCD backlight"], &confInt["backlight"], 70, 1, 100, 1, MakeDelegate(this, &GMenu2X::updateBacklightSetting)));
 	sd.addSetting(new MenuSettingInt(this, tr["Audio volume"], tr["Set the default audio volume"], &confInt["globalVolume"], 60, 0, 100));
@@ -591,6 +591,9 @@
 		confInt["globalVolume"] = 60;
 		confStr["bgscale"] = "Crop";
 		confStr["skinFont"] = "Skin";
+		confInt["backlightTimeout"] = 30;
+		confInt["powerTimeout"] = 10;
+		confInt["backlight"] = 70;
 	}
 
 	ifstream f(conffile, std::ios_base::in);
@@ -621,7 +624,7 @@
 	if (!confStr["wallpaper"].empty() && !file_exists(confStr["wallpaper"])) confStr["wallpaper"] = "";
 	if (confStr["skin"].empty() || !dir_exists(confStr["skin"])) confStr["skin"] = data_path("skins/Default");
 
-	evalIntConf(&confInt["backlightTimeout"], 30, 10, 300);
+	evalIntConf(&confInt["backlightTimeout"], 30, 0, 300);
 	evalIntConf(&confInt["powerTimeout"], 10, 1, 300);
 	evalIntConf(&confInt["outputLogs"], 0, 0, 1 );
 	// evalIntConf(&confInt["cpuMax"], 2000, 200, 2000 );
diff --git a/src/menusettingint.cpp b/src/menusettingint.cpp
index a7b2763..543ebaa 100644
--- a/src/menusettingint.cpp
+++ b/src/menusettingint.cpp
@@ -28,7 +28,7 @@
 using fastdelegate::MakeDelegate;
 
 MenuSettingInt::MenuSettingInt(GMenu2X *gmenu2x, const string &title, const string &description, int *value, int def, int min, int max, int delta, ms_onchange_t onChange):
-MenuSetting(gmenu2x, title, description), _value(value), def(def), min(min), max(max), delta(delta), onChange(onChange) {
+MenuSetting(gmenu2x, title, description), _value(value), def(def), min(min), max(max), delta(delta), onChange(onChange), off(false) {
 	originalValue = *value;
 	setValue(evalIntConf(value, def, min, max));
 
@@ -47,7 +47,17 @@
 
 void MenuSettingInt::draw(int y) {
 	MenuSetting::draw(y);
-	gmenu2x->s->write(gmenu2x->font, strvalue, 155, y+gmenu2x->font->height() / 2, VAlignMiddle);
+	
+	int w = 0;
+	if (off && *_value <= offValue) {
+		strvalue = "OFF";
+		w = gmenu2x->font->height() / 2.5;
+		RGBAColor color = (RGBAColor){255, 0, 0, 255};
+		gmenu2x->s->box(155, y + 1, w, gmenu2x->font->height() - 2, color);
+		gmenu2x->s->rectangle(155, y + 1, w, gmenu2x->font->height() - 2, 0, 0, 0, 255);
+		w += 2;
+	}
+	gmenu2x->s->write(gmenu2x->font, strvalue, 155 + w, y+gmenu2x->font->height() / 2, VAlignMiddle);
 }
 
 uint32_t MenuSettingInt::manageInput() {
@@ -72,7 +82,16 @@
 }
 
 void MenuSettingInt::setValue(int value) {
-	*_value = constrain(value,min,max);
+	if (off && *_value < value && value <= offValue)
+		*_value = offValue + 1;
+	else if (off && *_value > value && value <= offValue)
+		*_value = min;
+	else {
+		*_value = constrain(value,min,max);
+		if (off && *_value <= offValue)
+			*_value = min;
+	}
+		
 	stringstream ss;
 	ss << *_value;
 	strvalue = "";
@@ -90,3 +109,9 @@
 bool MenuSettingInt::edited() {
 	return originalValue != value();
 }
+
+MenuSettingInt *MenuSettingInt::setOff(int value) {
+	off = true;
+	offValue = constrain(value,min,max);
+	return this;
+}
diff --git a/src/menusettingint.h b/src/menusettingint.h
index d9b3db1..e7cdc29 100644
--- a/src/menusettingint.h
+++ b/src/menusettingint.h
@@ -28,6 +28,8 @@
 	int *_value;
 	std::string strvalue;
 	int def, min, max, delta;
+	bool off=false;
+	int offValue;
 
 	ms_onchange_t onChange;
 
@@ -46,6 +48,7 @@
 	virtual void setDefault();
 
 	int value();
+	MenuSettingInt *setOff(int value);
 };
 
 #endif
